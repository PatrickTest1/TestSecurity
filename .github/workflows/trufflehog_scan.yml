name: Trufflehog Scan and Email Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  trufflehog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install trufflehog
          npm install

      - name: Run TruffleHog
        run: |
          docker run --rm -it -v "$PWD:/pwd" trufflesecurity/trufflehog:latest github --repo https://github.com/sambrus/sambrus --json > trufflehog-output.json
          # trufflehog --json . > trufflehog-output.json
        continue-on-error: true

      # - name: Check for Vulnerabilities
      #   id: check_vuln
      #   run: |
      #     if [ -s trufflehog-output.json ]; then
      #       echo "Vulnerabilities detected."
      #       echo "has_vuln=true" >> $GITHUB_ENV
      #     else
      #       echo "No vulnerabilities detected."
      #       echo "has_vuln=false" >> $GITHUB_ENV
      #     fi

      - name: Generate PDF Report
        if: env.has_vuln == 'true'
        run: |
          node src/generate-pdf.js

      - name: Send Email Report
        if: env.has_vuln == 'true'
        run: |
          node src/send-email.js
        env:
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}

      - name: Cleanup Reports
        run: |
          if [ -f trufflehog-output.json ]; then
            rm trufflehog-output.json
          fi
          if [ -f trufflehog-report.pdf ]; then
            rm trufflehog-report.pdf
          fi
